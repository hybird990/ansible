---
- name: Delete VMware snapshots older than 7 days
  hosts: your_vcenter_host  # Replace with your vCenter host or group
  gather_facts: false
  tasks:
    - name: Get all snapshots
      community.vmware.vmware_guest_snapshot:
#        hostname: "{{ vcenter_hostname }}"  # Replace with your vCenter hostname
#        username: "{{ vcenter_username }}"  # Replace with your vCenter username
#        password: "{{ vcenter_password }}"  # Replace with your vCenter password
        datacenter: "{{ datacenter_name }}"  # Replace with your datacenter name
        name: "{{ vm_name }}"  # Replace with your VM name
        validate_certs: no  # Set to yes if you have valid certificates
        state: present  # Ensure snapshots are retrieved
      register: snapshot_info

    - name: Calculate the date 7 days ago
      local_action:
        module: command
        cmd: "date -d '7 days ago' '+%Y-%m-%dT%H:%M:%S%z'"
      register: seven_days_ago

    - name: Delete old snapshots
      community.vmware.vmware_guest_snapshot:
#        hostname: "{{ vcenter_hostname }}"
#        username: "{{ vcenter_username }}"
#        password: "{{ vcenter_password }}"
        datacenter: "{{ datacenter_name }}"
        name: "{{ vm_name }}"
        snapshot_id: "{{ item.snapshot_id }}"
        state: absent
        validate_certs: no
      loop: "{{ snapshot_info.snapshot_data }}"
      when: item.created_at is defined and item.created_at < seven_days_ago.stdout
      # Add this line to include the creation time for the snapshot
      vars:
          created_at_datetime: "{{ item.created_at | to_datetime('%Y-%m-%dT%H:%M:%S%z') }}"
      # Print the deleted snapshot ID for logging purposes
      changed_when: true
      # Uncomment this line to ensure it actually does the deletion
      # register: delete_result
