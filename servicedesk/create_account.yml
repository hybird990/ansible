- name: Create AD User with Groups
  hosts: 192.168.1.11
  gather_facts: no
  vars:
    # You can pass this in at runtime: -e "username=jdoe"
    username: "{{ username }}"
    groups:
      - "Domain Users"
      - "test group"

  tasks:
    - name: Create AD user if not exists
      win_shell: |
        if (-not (Get-ADUser -Filter "SamAccountName -eq '{{ username }}'")) {
          $pass = ConvertTo-SecureString -AsPlainText "Welcome123!" -Force
          New-ADUser -Name "{{ username }}" `
                     -SamAccountName "{{ username }}" `
                     -AccountPassword $pass `
                     -Enabled $true `
                     -Path "CN=Users,DC=vmware,DC=local"
          Write-Host "‚úÖ User '{{ username }}' created successfully."
        } else {
          Write-Host "‚ÑπÔ∏è User '{{ username }}' already exists. Skipping creation."
        }

    - name: Add user to specified groups
      win_shell: |
        $groups = @({% for group in groups %}"{{ group }}"{% if not loop.last %}, {% endif %}{% endfor %})
        $user = Get-ADUser -Identity "{{ username }}"
        if ($user) {
          foreach ($group in $groups) {
            try {
              Add-ADGroupMember -Identity "$group" -Members $user
              Write-Host "‚úÖ Added '{{ username }}' to group '$group'"
            } catch {
              Write-Host "‚ö†Ô∏è Failed to add '{{ username }}' to group '$group': $($_.Exception.Message)"
            }
          }
        } else {
          Write-Host "üö´ User '{{ username }}' not found. Cannot assign groups."
        }
