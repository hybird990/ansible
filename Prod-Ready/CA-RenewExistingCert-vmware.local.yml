#Survey Inputs
#example "{{ cert_thumbprint }}" b03d22a42a8c7c5d3eea6f7659a4aeb1f17de8aa
#example "{{ cert_export_path }}" C:\temp\renewed\servername_renewed_cert.pfx
#example "{{ pfx_password }}" VMware123!VMware123!
#example "{{ ca_config }}" addns.vmware.local\vmware-ADDNS-CA-1
#update in CertificateTemplate=webserver1 in code
- name: Renew the certificate and export to PFX
  win_shell: |
    $thumb = "{{ cert_thumbprint }}"
    $cert = Get-ChildItem Cert:\LocalMachine\My | Where-Object { $_.Thumbprint -eq $thumb }
    if (-not $cert) { throw "Certificate not found." }

    $inf = "[Version]`nSignature=`"$Windows NT$`"`n`n[RenewalRequest]`nRenewalCert=$thumb`nRenewalCertStore=My`nRequestType=PKCS10`n`n[RequestAttributes]`nCertificateTemplate=webserver1"
    $infPath = "$env:TEMP\renew.inf"
    Set-Content -Path $infPath -Value $inf -Force

    certreq -new $infPath $env:TEMP\renew.req
    certreq -submit -config "{{ ca_config }}" $env:TEMP\renew.req $env:TEMP\renewed.cer
    certreq -accept $env:TEMP\renewed.cer

    $newCert = Get-ChildItem Cert:\LocalMachine\My | Where-Object {
      $_.Subject -eq $cert.Subject -and $_.NotAfter -gt $cert.NotAfter
    } | Sort-Object NotAfter -Descending | Select-Object -First 1
    if (-not $newCert) { throw "Renewed certificate not found." }

    $pass = ConvertTo-SecureString "{{ pfx_password }}" -AsPlainText -Force
    Export-PfxCertificate -Cert $newCert -FilePath "{{ cert_export_path }}" -Password $pass -Force
  args:
    executable: powershell.exe
