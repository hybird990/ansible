- name: Delete VMware snapshots older than 7 days for all VMs
  hosts: localhost
  gather_facts: false
#  vars:
#    vcenter_hostname: "your-vcenter-host"
#    vcenter_username: "your-username"
#    vcenter_password: "your-password"
    datacenter_name: "sfo-m01-dc01"

  tasks:
    - name: Get list of all virtual machines
      community.vmware.vmware_vm_info:
#        hostname: "{{ vcenter_hostname }}"
#        username: "{{ vcenter_username }}"
#        password: "{{ vcenter_password }}"
        datacenter: "sfo-m01-dc01"
        validate_certs: no
      register: vm_list

    - name: Calculate 7-day-old timestamp
      set_fact:
        seven_days_ago: "{{ '%Y-%m-%dT%H:%M:%S%z' | strftime((ansible_date_time.epoch | int - 7*24*60*60)) }}"

    - name: Get snapshot info for each VM
      community.vmware.vmware_guest_snapshot:
#        hostname: "{{ vcenter_hostname }}"
#        username: "{{ vcenter_username }}"
#        password: "{{ vcenter_password }}"
        datacenter: "sfo-m01-dc01"
        name: "{{ item.name }}"
        validate_certs: no
        state: present
      loop: "{{ vm_list.virtual_machines }}"
      loop_control:
        label: "{{ item.name }}"
      register: all_snapshots

    - name: Delete snapshots older than 7 days
      community.vmware.vmware_guest_snapshot:
#        hostname: "{{ vcenter_hostname }}"
#        username: "{{ vcenter_username }}"
#        password: "{{ vcenter_password }}"
        datacenter: "sfo-m01-dc01"
        name: "{{ item.1.name }}"
        snapshot_id: "{{ snapshot.snapshot_id }}"
        state: absent
        validate_certs: no
      loop: "{{ all_snapshots.results | subelements('snapshot_data', skip_missing=True) }}"
      loop_control:
        label: "{{ item.1.name }} - {{ snapshot.snapshot_id }}"
      vars:
        snapshot: "{{ item.0 }}"
      when:
        - snapshot.created is defined
        - snapshot.created < seven_days_ago
